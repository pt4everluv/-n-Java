/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;
import java.io.IOException;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.sound.sampled.AudioFormat;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.DataLine;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.SourceDataLine;
import javax.sound.sampled.TargetDataLine;
/**
 *
 * @author Vinh
 */
public class calling extends javax.swing.JFrame {
    public static AudioFormat getaudioformat(){
        float sampleRate = 8000.0F;     //number of samples played or recorded per second
        int sampleSizeInbits = 16;      //bits in each sample
        int channel = 2;        //strereo
        boolean signed = true;
        boolean bigEndian = false;
        return new AudioFormat(sampleRate, sampleSizeInbits, channel, signed, bigEndian);
    }
    TargetDataLine audio_in;
    SourceDataLine audio_out;
    /**
     * Creates new form call
     */
    public calling() throws UnknownHostException {
        initComponents();
        initAudio();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        b_call = new javax.swing.JButton();
        b_cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("VnCooper2", 1, 24)); // NOI18N
        jLabel1.setText("Calling...");

        b_call.setBackground(new java.awt.Color(102, 255, 0));
        b_call.setForeground(new java.awt.Color(255, 255, 255));
        b_call.setText("HOLD");
        b_call.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_callMouseClicked(evt);
            }
        });
        b_call.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_callActionPerformed(evt);
            }
        });

        b_cancel.setBackground(new java.awt.Color(255, 0, 0));
        b_cancel.setForeground(new java.awt.Color(255, 255, 255));
        b_cancel.setText("STOP");
        b_cancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_cancelMouseClicked(evt);
            }
        });
        b_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(b_call)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                .addComponent(b_cancel)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(57, 57, 57)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_call)
                    .addComponent(b_cancel))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_callActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_callActionPerformed
       
    }//GEN-LAST:event_b_callActionPerformed

    private void b_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_cancelActionPerformed
        
    }//GEN-LAST:event_b_cancelActionPerformed

    private void b_cancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_cancelMouseClicked
        client.calling = false;
        try {
            client.sock.close();
        } catch (IOException ex) {Logger.getLogger(calling.class.getName()).log(Level.SEVERE, null, ex);       }
        System.exit(0);
    }//GEN-LAST:event_b_cancelMouseClicked

    private void b_callMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_callMouseClicked
        
    }//GEN-LAST:event_b_callMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(calling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(calling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(calling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(calling.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new calling().setVisible(true);
                } catch (UnknownHostException ex) {
                    Logger.getLogger(calling.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_call;
    private javax.swing.JButton b_cancel;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void initAudio() {
         try {
            //capture audio
            AudioFormat format = getaudioformat();
            DataLine.Info info = new DataLine.Info(TargetDataLine.class, format);
            audio_in = (TargetDataLine) AudioSystem.getLine(info);
            audio_in.open(format);
            audio_in.start();    //start thread       
            recorder_thread r = new recorder_thread();
            //playback audio from server
            DataLine.Info info_out = new DataLine.Info(TargetDataLine.class, format);
            audio_out = (SourceDataLine) AudioSystem.getLine(info_out);
            audio_out.open(format);
            audio_out.start();
            player_thread p =new player_thread();
            InetAddress inet = InetAddress.getByName(tf_ip.getText());
            r.audio_in = audio_in;
            r.dout = new DatagramSocket();
            r.toIP = inet;
            r.toPort = Integer.parseInt(tf_port.getText());
            p.audio_out = audio_out;
            p.din = new DatagramSocket();
            p.server_ip = inet;
            p.server_port = Integer.parseInt(tf_port.getText());
            client.calling = true;
            r.start();
            p.start();

        } catch (LineUnavailableException | SocketException ex) {
        }
    }
}
